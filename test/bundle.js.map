{"version":3,"file":"bundle.js","sources":["natty-storage.spec.js"],"sourcesContent":["// https://github.com/Automattic/expect.js\ndocument.getElementById('mode').innerHTML = nattyStorage.supportStorage ? 'localStorage可用' : 'localStorage不可用'\n\nconst OneKB = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' +\n    'aaaaaaa'\n\nlet count = 1\nconst getId = function () {\n    return count++\n}\n\nconst _describe = function () {}\nconst _it = function (name, fn) {fn()}\n\n\ndescribe('nattyStorage v__VERSION__ Unit Test', function() {\n\n    describe('static', function () {\n        it('version v__VERSION__', function () {\n            expect(nattyStorage.version).to.equal('__VERSION__')\n        })\n        it('supportStorage', function () {\n            expect(nattyStorage.supportStorage).to.be.a('boolean')\n        })\n    })\n\n    describe('sync `set/has` method', function () {\n        let ls\n\n        beforeEach('reset', function () {\n            ls = nattyStorage({\n                type: 'localStorage',\n                key: 'foo'\n            })\n        })\n\n        afterEach('clear', function () {\n            ls.destroy()\n        })\n\n        it('`has` method without any argument: throw error', function () {\n            ls.set('foo', 'x')\n            const hasErrorFn = function () {\n                ls.has()\n            }\n            expect(hasErrorFn).to.throwError()\n        })\n\n        it('`has` method with `key`: has value', function () {\n            ls.set('foo', 'x')\n            const result = ls.has('foo')\n            expect(result.has).to.be(true)\n            expect(result.value).to.be('x')\n        })\n\n        it('`has` method with `key`: no value', function () {\n            ls.set('foo', 'x')\n            const result = ls.has('boo')\n            expect(result.has).to.be(false)\n            expect(result.value).to.be(undefined)\n        })\n\n        it('`has` method with `path`: has value', function () {\n            ls.set('foo.y', 'y')\n            const result = ls.has('foo')\n            expect(result.has).to.be(true)\n            expect(result.value.y).to.be('y')\n        })\n\n        it('`has` method with `path`: no value', function () {\n            ls.set('foo.y', 'y')\n            const result = ls.has('foo.y.z')\n            expect(result.has).to.be(false)\n            expect(result.value).to.be(undefined)\n        })\n    })\n\n\n    describe('sync `set/get` method', function () {\n        let ls\n\n        beforeEach('reset', function () {\n            ls = nattyStorage({\n                type: 'localStorage',\n                key: 'foo'\n            })\n        })\n\n        afterEach('clear', function () {\n            ls.destroy()\n        })\n\n        it('`get` method without `key` argument should return all data', function () {\n            ls.set('foo', 'x')\n\n            // 没有传入`path`，则返回整个缓存值\n            expect(JSON.stringify(ls.get())).to.be('{\"foo\":\"x\"}')\n        })\n    })\n\n    describe('validity checking', function() {\n\n        it('`tag` checking: invalid', function(){\n            const id = getId()\n            const ls = nattyStorage({\n                type: 'localStorage',\n                key: id, // 保证之前不存在\n                tag: '1.0'\n            })\n\n            ls.set('foo', 'x')\n\n            // 版本过期\n            const ls2 = nattyStorage({\n                type: 'localStorage',\n                key: id, // 保证之前存在\n                tag: '2.0'\n            })\n\n            expect(JSON.stringify(ls2.get())).to.be('{}')\n            ls.destroy()\n            ls2.destroy()\n        })\n\n        it('`tag` checking: valid', function() {\n            const id = getId()\n            const ls = nattyStorage({\n                type: 'localStorage',\n                key: id, // 保证之前不存在\n                tag: '1.0'\n            })\n\n            ls.set('foo', 'x')\n\n            // 版本不过期\n            const ls2 = nattyStorage({\n                type: 'localStorage',\n                key: id, // 保证之前存在\n                tag: '1.0'\n            })\n\n            expect(ls2.get('foo')).to.be('x')\n\n            ls.destroy()\n        })\n\n        it('`duration` checking：invalid', function (done) {\n            const id = 'test-expire'\n            const ls = nattyStorage({\n                type: 'localStorage',\n                key: id,\n                duration: 200\n            })\n\n            ls.set('foo', 'x')\n\n            // 利用`setTimeout`创建过期\n            setTimeout(function () {\n                const ls2 = nattyStorage({\n                    type: 'localStorage',\n                    key: id,\n                    duration: 200\n                })\n\n                try {\n                    expect(JSON.stringify(ls2.get())).to.be('{}')\n                    ls.destroy()\n                    ls2.destroy()\n                    done()\n                } catch (e) {\n                    done(e)\n                }\n            }, 300)\n        })\n\n        it('`duration` checking：valid', function () {\n            const id = 'test-expire'\n            const ls = nattyStorage({\n                type: 'localStorage',\n                key: id,\n                duration: 200\n            })\n\n            ls.set('foo', 'x')\n\n            const ls2 = nattyStorage({\n                type: 'localStorage',\n                key: id,\n                duration: 200\n            })\n\n            expect(ls2.get().foo).to.be('x')\n            ls.destroy()\n            ls2.destroy()\n        })\n\n        it('`until` checking: invalid', function () {\n            const id = 'test-valid-until'\n            const ls = nattyStorage({\n                key: id,\n                until: new Date(new Date().getTime() -1000).getTime() // 永远的上一秒\n            })\n\n            ls.set('foo', 'x')\n\n            const ls2 = nattyStorage({\n                key: id\n            })\n\n            expect(JSON.stringify(ls2.get())).to.be('{}')\n            ls.destroy()\n            ls2.destroy()\n        })\n\n        it('`until` checking: valid', function () {\n            const id = 'test-valid-until'\n            const ls = nattyStorage({\n                key: id,\n                until: new Date().getTime() + 1000*60*60\n            })\n\n            ls.set('x', 'x')\n\n            const ls2 = nattyStorage({\n                key: id\n            })\n\n            expect(JSON.stringify(ls2.get())).to.be('{\"x\":\"x\"}')\n            ls.destroy()\n            ls2.destroy()\n        })\n    })\n})\n"],"names":["document","getElementById","innerHTML","nattyStorage","supportStorage","const","count","getId","describe","it","expect","version","to","equal","be","a","let","ls","beforeEach","type","key","afterEach","destroy","set","hasErrorFn","has","throwError","result","value","undefined","y","JSON","stringify","get","id","tag","ls2","done","duration","setTimeout","e","foo","until","Date","getTime"],"mappings":"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"}